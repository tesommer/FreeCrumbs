     @productandversion@\n"
+ "@copyright@\n"
+ "See LISENCE.txt for lisence terms.\n"
+ "\n"
+ "Finf: Print file info to standard output.\n"
+ "\n"
+ "Usage: finf [OPTION...] <FILE|DIRECTORY...>\n"
+ "\n"
+ "Options:\n"
+ "  -c    specify config file (- = STDIN)\n"
+ "  -o    override config setting\n"
+ "  -h    print this help message\n"
+ "\n"
+ "The command-line argument following -o has the format key=value (to set the\n"
+ "setting) or key (to unset the setting).\n"
+ "\n"
+ "If a config file is not specified, default settings will be used.\n"
+ "\n"
+ "Info fields\n"
+ "-----------\n"
+ "\n"
+ "* path:      the path without the filename\n"
+ "* filename:  the filename\n"
+ "* size:      the size in bytes\n"
+ "* modified:  last-modified timestamp\n"
+ "* md5:       MD5 checksum\n"
+ "* sha-1:     SHA-1 checksum\n"
+ "* sha-256:   SHA-256 checksum\n"
+ "* eol:       system line-terminator\n"
+ "* cr:        carriage return\n"
+ "* lf:        line feed\n"
+ "* crlf:      carriage-return-line-feed\n"
+ "* eolcount:  number of line terminators\n"
+ "* crcount:   number of carriage returns\n"
+ "* lfcount:   number of line feeds\n"
+ "* crlfcount: number of carriage-return-line-feeds\n"
+ "\n"
+ "Config-file format\n"
+ "------------------\n"
+ "\n"
+ "A config file contains parameters specified as key-value pairs. The following\n"
+ "parameters are supported:\n"
+ "\n"
+ "* output:          a format where tokens on the form ${field} will be replaced\n"
+ "                   by the corresponding field value. (default: ${filename})\n"
+ "* filter:          an input-file filter on one of two forms:\n"
+ "  - regex:           a regex that matches filenames to include as input\n"
+ "  - format pattern:  an info format followed by one or more regex patterns, each\n"
+ "                     preceded by either ++ to include matches or -- to exclude\n"
+ "                     matches (example: ${filename}++.+\\.html?--index\\..{3,4})\n"
+ "* order:           sort-order specification on the following form:\n"
+ "                   field1 [asc|desc] field2 [asc|desc]...\n"
+ "                   (e.g. path filename size asc modified desc)\n"
+ "* count:           number of info units to output\n"
+ "* hash.algorithms: whitespace-separated list of hash algorithms. Each algorthm\n"
+ "                   will be available as an info field with the name being the\n"
+ "                   algorithm in lowercase. (default: MD5 SHA-1 SHA-256)\n"
+ "* date.format:     applied to timestamp fields (default: yyyy-MM-dd HH:mm)\n"
+ "* prefilter:       whether or not to filter files before acquiring info for\n"
+ "                   output and/or order. (default: 1)\n"
+ "\n"
+ "Sample config file\n"
+ "------------------\n"
+ "\n"
+ "hash.algorithms=SHA-512\n"
+ "output=${path}${filename} ${size} ${modified} ${sha-512}${eol}\n"
+ "date.format=yyyy-MM-dd HH:mm\n"
+ "filter=.*\\.html\n"
+ "order=filename size asc modified desc\n"
+ "count=100\n"
+ "\n"
+ "Examples\n"
+ "--------\n"
+ "\n"
+ "Example 1: specify a config file:\n"
+ "finf -c myconfig.properties file1 file2...\n"
+ "\n"
+ "Example 2: display file checksum:\n"
+ "finf -o \"output=${sha-1}\" file\n"
+ "\n"
+ "Example 3: read config from standard input:\n"
+ "finf -c - file1 file2...\n"
+ "\n"
+ "Example 4: unset a config setting:\n"
+ "finf -c myconfig.properties -o order file1 file2...\n